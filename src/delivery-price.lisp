;;;; delivery-price.lisp

(in-package #:eshop)

(defparameter *delivery-price.storage* (make-hash-table :test #'equal))

(defun delivery-price.line-processor (storage line)
  (let* ((words (sklonenie-get-words line))
         (skls (mapcar #'(lambda (w) (string-trim "#\""  w))
                       words))
         (key (car skls)))
    (setf (gethash key storage) t)))

(defun delivery-price.restore ()
  (let ((t-storage (make-hash-table :test #'equal)))
    (xls.restore-from-xls
     (merge-pathnames "delivery-price.xls" (config.get-option :paths :path-to-main-page))
     #'(lambda (line) (delivery-price.line-processor t-storage line))
     "delivery-price.restore")
    (when t-storage
      (setf *delivery-price.storage* t-storage))))

(defun get-product-delivery-price (product)
  (let ((parent (if product (parent product)))
        (key)
        (result 300))
    (when parent
      (setf key (key parent))
      (if (or
           (gethash (key product) *delivery-price.storage*)
           (let ((diagonal (get-option product "Экран" "Диагональ экрана, дюйм")))
             (when (equal diagonal "")
               (setf diagonal nil))
             (setf diagonal (ceiling (parse-float diagonal)))
             (and (>= diagonal 32)
                  (string= (vendor product) "Samsung")))
           (equal key "kondicioneri")
           (yml.is-daily-product product))
          (setf result 0)
          (if (or
               (equal key "krupnaya-bitivaya-tehnika")
               (equal key "vstraivaemye-rabochie-poverhnosti")
               (equal key "vstraivaemye-rabochie-komplekti")
               (equal key "vityajki")
               (equal key "stiralnie-mashiny")
               (equal key "posudomoechnie-mashiny")
               (equal key "plity")
               (equal key "holodilniki-i-morozilniki")
               (equal key "duhovki")
               (equal key "kondicioneri")
               (let ((diagonal (get-option product "Экран" "Диагональ экрана, дюйм")))
                 (if (equal diagonal "")
                     (setf diagonal nil))
                 (setf diagonal (ceiling (parse-float diagonal)))
                 (> diagonal 51)))
              (setf result 500)
              (if (or
                   (equal key "dlya-snyatiya-katiwkov")
                   (equal key "vesi-napolnie")
                   (equal key "trimmery")
                   (equal key "shipci")
                   (equal key "gigiena-i-zdorovie")
                   (equal key "feny")
                   (equal key "epilyatory")
                   (equal key "britvy")
                   (and (equal key "elektrochainiki-i-termopoty")
                        (let ((type (get-option product "Общие характеристики" "Тип")))
                          (string-not-equal type "Термопот")))
                   (equal key "planshetnie-komputery")
                   (equal key "mobilephones")
                   (equal key "cartridge-dlya-printerov")
                   (equal key "transmittery")
                   (equal key "alarm")
                   (equal key "kamerizadnegowida")
                   (equal key "parktronics")
                   (equal key "videoregistratori")
                   (equal key "radar-detectori")
                   ;; (equal key "avtomobilnie-usiliteli")
                   (equal key "avtomobilnie-televizori")
                   (and (equal key "avtomobilnie-subvuferi")
                        (let ((type (get-option product "Общие характеристики" "Тип")))
                          (string-not-equal type "Сабвуфер")))
                   (equal key "avtomobilnie-kolonki")
                   (equal key "avtomagnitoli")
                   (equal key "radiostations")
                   (equal key "changers")
                   (equal key "cifrovye-fotoapparaty")
                   (equal key "klei")
                   (equal key "promhimiya")
                   (equal key "pilki-polotna")
                   (equal key "subilo")
                   (equal key "schlif-lenti-listi")
                   (equal key "dlya-steplerov")
                   (equal key "fresi")
                   (equal key "dlya-sadovoy-tehniki")
                   (equal key "patroni")
                   (equal key "dlya-swarki")
                   (equal key "kordschetki")
                   (equal key "swerla")
                   (equal key "krugi-schlif")
                   (equal key "krugi-pilnie")
                   (equal key "cepi-pilnie")
                   (equal key "krugi-lepestkovie")
                   (equal key "buri")
                   (equal key "biti")
                   (equal key "koronki-chaschi")
                   (equal key "drel")
                   (equal key "schtativi")
                   (equal key "multimetri")
                   (equal key "ruletka")
                   (equal key "uklonomer")
                   (equal key "nivelir")
                   (equal key "uglomeri")
                   (equal key "kurwimetr")
                   (equal key "detektori")
                   (equal key "dalnomeri")
                   (equal key "urovni")
                   (equal key "ellobsik")
                   (equal key "schlifovalnie-maschini")
                   (equal key "radiotelefoni")
                   (equal key "stactelefon")
                   (equal key "videokamery")
                   )
                  (setf result 100)))))
    result))
